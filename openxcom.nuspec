<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>openxcom</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>2019.05.29.2230</version>
    <packageSourceUrl>https://github.com/n3rd4i/openxcom.git</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>n3rd4i</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>openxcom (Install)</title>
    <authors>SupSuper</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://github.com/OpenXcom/OpenXcom/</projectUrl>
    <!--<iconUrl>http://cdn.rawgit.com/__REPLACE_YOUR_REPO__/master/icons/openxcom.png</iconUrl>-->
    <!-- <copyright>Year Software Vendor</copyright> -->
    <!-- If there is a license Url available, it is required for the community feed -->
    <licenseUrl>https://github.com/OpenXcom/OpenXcom/blob/master/LICENSE.txt</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/OpenXcom/OpenXcom/</projectSourceUrl>
    <docsUrl>https://github.com/OpenXcom/OpenXcom/blob/master/README.md</docsUrl>
    <mailingListUrl>https://github.com/OpenXcom/OpenXcom/graphs/contributors</mailingListUrl>
    <bugTrackerUrl>https://openxcom.org/bug-tracker/</bugTrackerUrl>
    <tags>openxcom xcom</tags>
    <summary>XCOM game engine</summary>
    <description>
[OpenXcom](https://openxcom.org/about/) is an open-source clone of the original UFO: Enemy Unknown (X-Com: UFO Defense in USA), licensed under the GPL and written in C++ / SDL. It was originally founded by SupSuper in February 2010, and has since grown into a small development team surrounded by a very supporting community.

The goal of the project is to bring back the tried and true feel of the original with none of the issues. All the same graphics, sound and gameplay with a brand new codebase written from scratch. This should give it:

* Fixability: Play the game natively without any need for emulators or fancy hacks, with [none of the limitations and bugs](https://www.https//ufopaedia.org/index.php?title=Known_Bugs) that plagued the original. No more 80-item-limit, personnel limits, funding overflows, disconnected facilities, broken proximity grenades, floating soldiers, etc.
* Moddability: Tweak the game to your heart’s content. Sure the original was pretty good, but maybe you just think it could be that bit better. A nicer base layout, better laser weapons, maybe challenge yourself with a custom game mode, or just put in all the crazy stuff you’ve always wanted! None of it is hardcoded.
* Flexibility: Port the game to any platform you like, customize it to your liking, or use it to make your own far-fetched remakes. The code is fully documented and open-source so anyone can take a crack at it.

For more details check the [Wiki](https://https//ufopaedia.org/index.php?title=OpenXcom).
    </description>
    <releaseNotes>https://github.com/OpenXcom/OpenXcom/blob/master/CHANGELOG.txt</releaseNotes>
    <!-- =============================== -->      

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-core.extension" version="1.1.0" />
    </dependencies>-->
    <!-- chocolatey-core.extension - https://chocolatey.org/packages/chocolatey-core.extension
         - You want to use Get-UninstallRegistryKey on less than 0.9.10 (in chocolateyUninstall.ps1)
         - You want to use Get-PackageParameters and on less than 0.11.0
         - You want to take advantage of other functions in the core community maintainer's team extension package
    -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
